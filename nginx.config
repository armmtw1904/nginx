load_module modules/ngx_http_js_module.so;
worker_processes 4;

events { worker_connections 1024;}

#error_log /var/log/nginx/err.log;

http {
	js_import auth.js; 
	#log_format headers '$http_x_api_access_token';
	#access_log /var/log/nginx/auth_subrequest.log headers;
	sendfile on;
	
	server {
		listen   80 default_server;
		return   444;
	}
		
    server {
		listen 8080;
		proxy_http_version 1.1;
		proxy_pass_request_headers on;
		underscores_in_headers on;
		proxy_connect_timeout       15;
		proxy_send_timeout          15;
		proxy_read_timeout          15;
		send_timeout                15;
	
		location /healthcheck {
			add_header Content-Type text/plain;
			return 200 'healthy';
		}
		
		#curl http://localhost:8080/auth -i
		location /auth {
			auth_request /authreq;
			auth_request_set $auth_status $upstream_status;
			auth_request_set $x_api_auth_token $upstream_http_x_api_access_token; # empty here
			add_header myheader $upstream_http_x_api_access_token;
			return 200 "healthy-auth-from-$request_uri";
		}
		
		#curl http://localhost:8080/authreq -i
		location /authreq {
			internal;
			proxy_pass http://localhost:8000/healthauth; 
			proxy_pass_request_body off;
			proxy_set_header        Content-Length "";
			proxy_set_header        X-Original-URI $request_uri;
			add_header x-test-upstream $upstream_http_x_api_access_token; # can access x_api_access_token here
			#access_log /var/log/nginx/auth_subrequest.log headers;
		}
    }
	
	server {
		listen 8000;
		proxy_http_version 1.1;
		proxy_pass_request_headers on;
		underscores_in_headers on;
		
		location /healthauth {
			js_content auth.getResp;
		}
		
	}
	
	server {
		listen 4567;
		proxy_http_version 1.1;
		proxy_pass_request_headers on;
		underscores_in_headers on;
		
		location ^~ /mongo/api/ {
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Host $server_name;
			proxy_pass http://host.docker.internal:45919/;
		}
		
		location / {
			proxy_pass http://host.docker.internal:44468/;
		}
		
		location /healthcheck {
			add_header Content-Type text/plain;
			return 200 'healthy';
		}
	}
}